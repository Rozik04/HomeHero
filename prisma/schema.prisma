// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

enum ShowCaseType {
  slider
  banner
  card
}



datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


 enum TimeUnit {
    day
    hour 
  }


enum UserRole {
  admin
  superadmin
  vieweradmin
  legaluser
  individualuser
}


enum UserStatus {
  active
  passive
}


enum PaymentType {
  cash
  card
}


enum OrderStatus {
  pending
  accepted
  rejected
  canceled
  delivered
}


model User {
  id            String  @id @default(uuid())
  nameRu        String
  nameUz        String
  nameEn        String
  email         String @unique
  password      String
  phone         String
  image         String
  role          UserRole
  status        UserStatus
  regionID      String?
  location      String

  passportSeries String?
  inn            String?

  region    Region? @relation(fields: [regionID], references: [id])
  baskets   Basket[]
  comments  Comment[]
  orders    Order[]
}


model Region {
  id      String @id @default(uuid())
  nameRu  String
  nameUz  String
  nameEn  String

  users   User[]
}




model Order {
  id                String       @id @default(uuid())
  locationLat       String
  locationLong      String
  address           String
  orderDate         DateTime     @default(now())
  deliveryDate      DateTime
  paymentType       PaymentType
  withDelivery      Boolean
  status            OrderStatus
  commentToDelivery String?
  userID            String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  users             User?  @relation(fields: [userID], references: [id])

  orderMaster       OderMaster[]
  items             OrderItem[]
  comments          Comment[]   
}


model Basket {
  id              String   @id @default(uuid())
  userID          String?
  productID       String?
  toolID          String?
  levelID         String?
  timeUnit        TimeUnit?
  countOfTool     Int?
  countOfProduct  Int?
  workingHours    Int
  measure         Int?
  totalPrice      Int?
  createdAt       DateTime @default(now())

  user            User?     @relation(fields: [userID], references: [id])
  product         Product?  @relation(fields: [productID], references: [id])
  tool            Tool ?    @relation(fields: [toolID], references: [id])
  level           Level  ?  @relation(fields: [levelID], references: [id])
}


model OrderItem {
  id              String   @id @default(uuid())
  orderID         String
  productID       String?
  toolID          String?
  levelID         String?
  timeUnit        TimeUnit?
  countOfTool     Int?
  countOfProduct  Int?
  workingHours    Int
  measure         Int?
  totalPrice      Int?
  createdAt       DateTime @default(now())

  order           Order  @relation(fields: [orderID], references: [id])
  product         Product ? @relation(fields: [productID], references: [id])
  tool            Tool?     @relation(fields: [toolID], references: [id])
  level           Level?   @relation(fields: [levelID], references: [id])
}





model Brand {
  id     String @id @default(uuid())
  nameRu String
  nameUz String
  nameEn String

  tools  Tool[]
}


model Capacity {
  id     String @id @default(uuid())
  nameRu String
  nameUz String
  nameEn String

  tools  Tool[]
}


model Size {
  id     String @id @default(uuid())
  nameRu String
  nameUz String
  nameEn String

  tools  Tool[]
}


model Comment {
  id       String  @id @default(uuid())
  message  String
  orderID  String
  userID   String?

  user     User?   @relation(fields: [userID], references: [id])
  order    Order   @relation(fields: [orderID], references: [id])
  ratings  CommentRating[]
}

model CommentRating {
  id         String   @id @default(uuid())
  star       Int
  masterID   String
  commentID  String

  master     Master   @relation(fields: [masterID], references: [id])
  comment    Comment  @relation(fields: [commentID], references: [id])
}


model OderMaster {
  id         String   @id @default(uuid())
  orderID    String
  masterID   String
  orderMasters     Order @relation(fields: [orderID], references: [id])
}


model Master {
  id            String @id @default(uuid())
  nameRu        String
  nameUz        String
  nameEn        String
  isActive      Boolean
  phone         String
  dob           String
  image         String
  passportImage String
  rating        Decimal?
  about         String

  masterJobs    MasterJobs[]
  ratings      CommentRating[]
}


model MasterJobs {
  id              String   @id @default(uuid())
  toolID          String
  productID       String  
  workingHours    Int
  levelID         String
  priceHourly     Int
  priceDaily      Int
  experience      String
  masterID        String

  tool            Tool     @relation(fields: [toolID], references: [id])
  product         Product  @relation(fields: [productID], references: [id])
  level           Level    @relation(fields: [levelID], references: [id])
  master          Master  @relation(fields: [masterID], references: [id])
}


model GeneralInfo {
  id       String @id @default(uuid())
  email    String
  link     String
  location String
  phone    String
}



model ShowCase {
  id            String        @id @default(uuid())
  nameRu        String
  nameUz        String
  nameEn        String
  descriptionRu String
  descriptionUz String
  descriptionEn String
  image         String
  link          String
  type          ShowCaseType 
  isActive      Boolean
  startDate     DateTime      @default(now())
  endDate       DateTime
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}


model FAQ {
  id           String @id @default(uuid())
  questionUz   String
  questionRu   String
  questionEn   String
  answerUz     String
  answerRu     String
  answerEn     String
}



model Contact {
  id      String @id @default(uuid())
  nameRu  String
  nameUz  String
  nameEn  String
  phone   String
  address String
  message String
  email   String
}


model Partner {
  id             String   @id @default(uuid())
  nameRu         String
  nameUz         String
  nameEn         String
  image          String
  phone          String
  link           String
  address        String
  status         Boolean
  paymentTerms   String
  agreementStart DateTime @default(now()) 
  agreementEnd   DateTime
}


model Product {
  id              String           @id @default(uuid())
  isActive        Boolean
  nameRu          String
  nameUz          String
  nameEn          String
  image           String


  baskets         Basket[] 
  orderItems      OrderItem[]   
  masterJobs      MasterJobs[] 
  levels          ProductLevel[]
  tools           ProductTool[]
}


model Level {
  id         String @id @default(uuid())
  nameRu     String
  nameUz     String
  nameEn     String

  orderItems OrderItem[]
  masterJobs MasterJobs[]
  products   ProductLevel[]
  baskets    Basket[]
}


model Tool {
  id             String @id @default(uuid())
  nameRu         String
  nameUz         String
  nameEn         String
  descriptionRu  String
  descriptionUz  String
  descriptionEn  String
  hourlyPrice    Int?
  dailyPrice     Int?

  quantity       Int
  code           String? @unique
  brandID        String?
  capacityID     String?
  sizeID         String?
  image          String
  isActive       Boolean

  brand          Brand  ?   @relation(fields: [brandID], references: [id])
  capacity       Capacity?  @relation(fields: [capacityID], references: [id])
  size           Size    ?  @relation(fields: [sizeID], references: [id])
  orderItems     OrderItem[]
  masterJobs     MasterJobs[]
  baskets        Basket[]
  products       ProductTool[]
}


model ProductLevel {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [productID], references: [id])
  productID  String
  workingHours    Int?
  hourlyPrice     Int?
  dailyPrice      Int?
  level      Level    @relation(fields: [levelID], references: [id])
  levelID    String

  @@unique([productID, levelID])
}


model ProductTool {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [productID], references: [id])
  productID  String
  tool       Tool     @relation(fields: [toolID], references: [id])
  toolID     String

  @@unique([productID, toolID])
}
